{"body":"I need to check the `checked` property of a checkbox and perform an action based on the checked property using jQuery.\r\n\r\nFor example, if the age checkbox is checked, then I need to show a textbox to enter age, else hide the textbox.\r\n\r\nBut the following code returns `false` by default:\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    if ($(&#39;#isAgeSelected&#39;).attr(&#39;checked&#39;)) {\r\n      $(&quot;#txtAge&quot;).show();\r\n    } else {\r\n      $(&quot;#txtAge&quot;).hide();\r\n    }\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n    &lt;input type=&quot;checkbox&quot; id=&quot;isAgeSelected&quot;/&gt;\r\n    &lt;div id=&quot;txtAge&quot; style=&quot;display:none&quot;&gt;\r\n      Age is selected\r\n    &lt;/div&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n\r\nHow do I successfully query the `checked` property?\r\n","title":"How do I check whether a checkbox is checked in jQuery?","answers":[{"score":3508,"body_markdown":"&gt; How do I successfully query the checked property?\r\n\r\nThe `checked` property of a checkbox DOM element will give you the `checked` state of the element.\r\n\r\nGiven your existing code, you could therefore do this:\r\n\r\n    if(document.getElementById(&#39;isAgeSelected&#39;).checked) {\r\n        $(&quot;#txtAge&quot;).show();\r\n    } else {\r\n        $(&quot;#txtAge&quot;).hide();\r\n    }\r\n\r\nHowever, there&#39;s a much prettier way to do this, using [`toggle`][1]:\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    $(&#39;#isAgeSelected&#39;).click(function() {\r\n        $(&quot;#txtAge&quot;).toggle(this.checked);\r\n    });\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n    &lt;input type=&quot;checkbox&quot; id=&quot;isAgeSelected&quot;/&gt;\r\n    &lt;div id=&quot;txtAge&quot; style=&quot;display:none&quot;&gt;Age is something&lt;/div&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n  [1]: http://api.jquery.com/toggle/"},{"score":56,"body_markdown":"I believe you could do this:\r\n\r\n    if ($(&#39;#isAgeSelected :checked&#39;).size() &gt; 0)\r\n    {\r\n        $(&quot;#txtAge&quot;).show(); \r\n    } else { \r\n        $(&quot;#txtAge&quot;).hide();\r\n    }\r\n\r\n"},{"score":108,"body_markdown":"This worked for me:\r\n\r\n    $get(&quot;isAgeSelected &quot;).checked == true\r\n\r\nWhere `isAgeSelected` is the id of the control.\r\n\r\nAlso, @karim79&#39;s [answer][1] works fine. I am not sure what I missed at the time I tested it.\r\n\r\n**Note, this is answer uses Microsoft Ajax, not jQuery**\r\n\r\n  [1]: https://stackoverflow.com/questions/901712/check-checkbox-checked-property-using-jquery/901727#901727\r\n"},{"score":176,"body_markdown":"I am using this and this is working absolutely fine:\r\n     \r\n    $(&quot;#checkkBoxId&quot;).attr(&quot;checked&quot;) ? alert(&quot;Checked&quot;) : alert(&quot;Unchecked&quot;);\r\n\r\nNote: If the checkbox is checked it will return true otherwise undefined, so better check for the &quot;TRUE&quot; value."},{"score":12,"body_markdown":"I was having the same problem and none of the posted solutions seemed to work and then I found out that it&#39;s because ASP.NET renders the CheckBox control as a SPAN with INPUT inside, so the CheckBox ID is actually an ID of a SPAN, not an INPUT, so you should use:\r\n\r\n    $(&#39;#isAgeSelected input&#39;)\r\n\r\nrather than\r\n\r\n    $(&#39;#isAgeSelected&#39;)\r\n\r\nand then all methods listed above should work.\r\n\r\n"},{"score":54,"body_markdown":"I ran in to the exact same issue. I have an ASP.NET checkbox\r\n\r\n    &lt;asp:CheckBox ID=&quot;chkBox1&quot; CssClass=&#39;cssChkBox1&#39; runat=&quot;server&quot; /&gt;\r\n\r\nIn the jQuery code I used the following selector to check if the checkbox was checked or not, and it seems to work like a charm.\r\n\r\n    if ($(&quot;&#39;.cssChkBox1 input[type=checkbox]&#39;&quot;).is(&#39;:checked&#39;))\r\n    { ... } else { ... }\r\n\r\nI&#39;m sure you can also use the ID instead of the CssClass,\r\n\r\n    if ($(&quot;&#39;#cssChkBox1 input[type=checkbox]&#39;&quot;).is(&#39;:checked&#39;))\r\n    { ... } else { ... }\r\n\r\nI hope this helps you.\r\n"},{"score":49,"body_markdown":"This works for me:\r\n\r\n    /* isAgeSelected being id for checkbox */\r\n\r\n    $(&quot;#isAgeSelected&quot;).click(function(){\r\n      $(this).is(&#39;:checked&#39;) ? $(&quot;#txtAge&quot;).show() : $(&quot;#txtAge&quot;).hide();\r\n    });\r\n"},{"score":12,"body_markdown":"Here&#39;s an example that includes **initialising** the show/hide to match the state of the checkbox when the **page loads**; taking account of the fact that firefox *remembers the state of checkboxes* when you refresh the page, but *won&#39;t* remember the state of the shown/hidden elements.\r\n\r\n\t$(function() {\r\n\t\t// initialise visibility when page is loaded\r\n\t\t$(&#39;tr.invoiceItemRow&#39;).toggle($(&#39;#showInvoiceItems&#39;).attr(&#39;checked&#39;));\r\n\t\t// attach click handler to checkbox\r\n\t\t$(&#39;#showInvoiceItems&#39;).click(function(){ $(&#39;tr.invoiceItemRow&#39;).toggle(this.checked);})\r\n\t});\r\n\r\n(with help from other answers on this question)"},{"score":1935,"body_markdown":"Use jQuery&#39;s [is()][1] function:\r\n\r\n    if($(&quot;#isAgeSelected&quot;).is(&#39;:checked&#39;))\r\n        $(&quot;#txtAge&quot;).show();  // checked\r\n    else\r\n        $(&quot;#txtAge&quot;).hide();  // unchecked\r\n\r\n  [1]: http://api.jquery.com/is/\r\n"},{"score":590,"body_markdown":"Using jQuery &gt; 1.6 \r\n\r\n    &lt;input type=&quot;checkbox&quot; value=&quot;1&quot; name=&quot;checkMeOut&quot; id=&quot;checkMeOut&quot; checked=&quot;checked&quot; /&gt;\r\n\r\n    // traditional attr\r\n    $(&#39;#checkMeOut&#39;).attr(&#39;checked&#39;); // &quot;checked&quot;\r\n    // new property method\r\n    $(&#39;#checkMeOut&#39;).prop(&#39;checked&#39;); // true\r\n\r\nUsing the new property method:\r\n\r\n    if($(&#39;#checkMeOut&#39;).prop(&#39;checked&#39;)) {\r\n        // something when checked\r\n    } else {\r\n        // something else when not\r\n    }"},{"score":66,"body_markdown":"Using the `Click` event handler for the checkbox property is unreliable, as the `checked` property can change during the execution of the event handler itself!\r\n\r\nIdeally, you&#39;d want to put your code into a `change` event handler such as it is fired every time the value of the check box is changed (independent of *how* it&#39;s done so).\r\n\r\n    $(&#39;#isAgeSelected&#39;).bind(&#39;change&#39;, function () {\r\n\r\n       if ($(this).is(&#39;:checked&#39;))\r\n         $(&quot;#txtAge&quot;).show();\r\n       else\r\n         $(&quot;#txtAge&quot;).hide();\r\n    });\r\n"},{"score":37,"body_markdown":"My way of doing this is:\r\n\r\n    if ( $(&quot;#checkbox:checked&quot;).length ) {       \r\n        alert(&quot;checkbox is checked&quot;);\r\n    } else {\r\n        alert(&quot;checkbox is not checked&quot;);\r\n    }"},{"score":18,"body_markdown":"I verified in Firefox 9.0.1 that the following works for catching the state of a checkbox post change:\r\n\r\n    $(&quot;#mycheckbox&quot;).change(function() {\r\n        var value = $(this).prop(&quot;checked&quot;) ? &#39;true&#39; : &#39;false&#39;;\t\t\t\t\t\t\r\n        alert(value);\r\n    });"},{"score":34,"body_markdown":"    $(selector).attr(&#39;checked&#39;) !== undefined\r\n\r\nThis returns `true` if the input is checked and `false` if it is not."},{"score":57,"body_markdown":"I decided to post an answer on how to do that exact same thing without jQuery. Just because I&#39;m a rebel.\r\n\r\n    var ageCheckbox = document.getElementById(&#39;isAgeSelected&#39;);\r\n    var ageInput = document.getElementById(&#39;txtAge&#39;);\r\n    \r\n    // Just because of IE &lt;333\r\n    ageCheckbox.onchange = function() {\r\n        // Check if the checkbox is checked, and show/hide the text field.\r\n        ageInput.hidden = this.checked ? false : true;\r\n    };\r\n\r\nFirst you get both elements by their ID. Then you assign the checkboxe&#39;s `onchange` event a function that checks whether the checkbox got checked and sets the `hidden` property of the age text field appropriately. In that example using the ternary operator.\r\n\r\nHere is a [fiddle][1] for you to test it.\r\n\r\n**Addendum**\r\n\r\nIf cross-browser compatibility is an issue then I propose to set the CSS `display` property to _none_ and _inline_.\r\n\r\n    elem.style.display = this.checked ? &#39;inline&#39; : &#39;none&#39;;\r\n\r\nSlower but cross-browser compatible.\r\n\r\n  [1]: http://jsfiddle.net/mainerror/cjSkC/"},{"score":125,"body_markdown":"Since jQuery 1.6, the behavior of [`jQuery.attr()`][1] has changed and users are encouraged  not to use it to retrieve an element&#39;s checked state. Instead, you should use [`jQuery.prop()`][2]:\r\n\r\n    $(&quot;#txtAge&quot;).toggle(\r\n        $(&quot;#isAgeSelected&quot;).prop(&quot;checked&quot;) // For checked attribute it returns true/false;\r\n                                            // Return value changes with checkbox state\r\n    );\r\n\r\nTwo other possibilities are:\r\n\r\n    $(&quot;#txtAge&quot;).get(0).checked\r\n    $(&quot;#txtAge&quot;).is(&quot;:checked&quot;)\r\n\r\n  [1]: http://api.jquery.com/attr/\r\n  [2]: http://api.jquery.com/prop/\r\n"},{"score":26,"body_markdown":"The top answer didn&#39;t do it for me. This did though:\r\n\r\n    &lt;script type=&quot;text/javascript&quot;&gt;\r\n        $(document).ready(function(){\r\n\r\n            $(&quot;#li_13&quot;).click(function(){\r\n                if($(&quot;#agree&quot;).attr(&#39;checked&#39;)){\r\n                    $(&quot;#saveForm&quot;).fadeIn();\r\n                }\r\n                else\r\n                {\r\n                    $(&quot;#saveForm&quot;).fadeOut();\r\n                }\r\n            });\r\n        });\r\n    &lt;/script&gt;\r\n\r\nBasically when the element #li_13 is clicked, it checks if the element # agree (which is the checkbox) is checked by using the `.attr(&#39;checked&#39;)` function. If it is then fadeIn the #saveForm element, and if not fadeOut the saveForm element.\r\n"},{"score":2,"body_markdown":"    if( undefined == $(&#39;#isAgeSelected&#39;).attr(&#39;checked&#39;) ) {\r\n        $(&quot;#txtAge&quot;).hide();\r\n    } else {\r\n        $(&quot;#txtAge&quot;).show();\r\n    }"},{"score":6,"body_markdown":"    if( undefined == $(&#39;#isAgeSelected&#39;).attr(&#39;checked&#39;) ) {\r\n        $(&quot;#txtAge&quot;).hide();\r\n    } else {\r\n        $(&quot;#txtAge&quot;).show();\r\n    }"},{"score":9,"body_markdown":"Use:\r\n\r\n    $(this).toggle($(&quot;input:checkbox&quot;, $(this))[0].checked);\r\n\r\nWhen you are selecting out of context, remember you need the [0] to access the checkbox.\r\n\r\n"},{"score":10,"body_markdown":"This was my workaround:\r\n\r\n    $(&#39;#vcGoButton&#39;).click(function () {\r\n        var buttonStatus = $(&#39;#vcChangeLocation&#39;).prop(&#39;checked&#39;);\r\n        console.log(&quot;Status is &quot; + buttonStatus);\r\n        if (buttonStatus) {\r\n            var address = $(&#39;#vcNewLocation&#39;).val();\r\n            var cabNumber = $(&#39;#vcVehicleNumber&#39;).val();\r\n            $.get(&#39;postCabLocation.php&#39;,\r\n                  {address: address, cabNumber: cabNumber},\r\n                  function(data) {\r\n                      console.log(&quot;Changed vehicle &quot; + cabNumber + &quot; location to &quot; + address );\r\n                  });\r\n        }\r\n        else {\r\n            console.log(&quot;VC go button clicked, but no location action&quot;);\r\n        }\r\n    });\r\n"},{"score":17,"body_markdown":"Include jQuery from the local file system. I used Google&#39;s [CDN][1], and there are also many CDNs to choose from.\r\n\r\n    &lt;script src=&quot;//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n\r\nThe code will execute as soon as a checkbox inside `mycheck` class is clicked. If the current clicked checkbox is checked then it will disable all others and enable the current one. If the current one is unchecked, it will again enable all checkboxes for rechecking.\r\n\r\n    &lt;script type=&quot;text/javascript&quot;&gt;\r\n        $(document).ready(function() {\r\n\r\n            var checkbox_selector = &#39;.mycheck input[type=checkbox]&#39;;\r\n\r\n            $(checkbox_selector).click(function() {\r\n                if ($($(this)).is(&#39;:checked&#39;)) {\r\n\r\n                    // Disable all checkboxes\r\n                    $(checkbox_selector).attr(&#39;disabled&#39;, &#39;disabled&#39;);\r\n\r\n                    // Enable current one\r\n                    $($(this)).removeAttr(&#39;disabled&#39;);\r\n                }\r\n                else {\r\n                    // If unchecked open all checkbox\r\n                    $(checkbox_selector).removeAttr(&#39;disabled&#39;);\r\n                }\r\n            });\r\n        });\r\n    &lt;/script&gt;\r\n\r\nSimple form to test\r\n\r\n    &lt;form method=&quot;post&quot; action=&quot;&quot;&gt;\r\n        &lt;div class=&quot;mycheck&quot;&gt;\r\n            &lt;input type=&quot;checkbox&quot; value=&quot;1&quot; /&gt; Television\r\n            &lt;input type=&quot;checkbox&quot; value=&quot;2&quot; /&gt; Computer\r\n            &lt;input type=&quot;checkbox&quot; value=&quot;3&quot; /&gt; Laptop\r\n            &lt;input type=&quot;checkbox&quot; value=&quot;4&quot; /&gt; Camera\r\n            &lt;input type=&quot;checkbox&quot; value=&quot;5&quot; /&gt; Music Systems\r\n        &lt;/div&gt;\r\n    &lt;/form&gt;\r\n\r\nOutput screen:\r\n\r\n![Enter image description here][2]\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Content_delivery_network\r\n  [2]: http://i.stack.imgur.com/SM7V9.png\r\n"},{"score":17,"body_markdown":"    \r\n    if($(&quot;#checkkBoxId&quot;).is(&#39;:checked&#39;)){\r\n      alert(&quot;Checked=true&quot;);\r\n    }\r\n\r\n\r\nor\r\n\r\n    if($(&quot;#checkkBoxId&quot;).attr(&#39;checked&#39;) == true){\r\n      alert(&quot;checked=true&quot;);\r\n    }"},{"score":14,"body_markdown":"This is the minimal amount of code I think I needed to do something like this effectively. I found this method to be useful; it returns an array of the check boxes that are checked and then you can use their value (this solution uses jQuery):\r\n\r\n    // This is how you get them\r\n    var output = &quot;&quot;;\r\n    var checkedBoxes = $(&quot;DivCheckBoxesAreIn&quot;).children(&quot;input:checked&quot;);\r\n    if(checkedBoxes.length &lt;= 0) {\r\n        alert(&#39;Please select check boxes&#39;);\r\n        return false;\r\n    };\r\n\r\n    // And this is how you use them:\r\n    checkedBoxes.each(function() {\r\n        output +=  this.value + &quot;, &quot;;\r\n    };\r\n\r\nPrinting &quot;output&quot; will give you a comma-separated list of your values.\r\n"},{"score":93,"body_markdown":"If you are using an updated version of jquery, you must go for `.prop` method to resolve your issue:\r\n\r\n`$(&#39;#isAgeSelected&#39;).prop(&#39;checked&#39;)` will return `true` if checked and `false` if unchecked. I confirmed it and I came across this issue earlier. `$(&#39;#isAgeSelected&#39;).attr(&#39;checked&#39;)` and `$(&#39;#isAgeSelected&#39;).is(&#39;checked&#39;)` is returning `undefined` which is not a worthy answer for the situation. So do as given below.\r\n\r\n    if($(&#39;#isAgeSelected&#39;).prop(&#39;checked&#39;)) {\r\n        $(&quot;#txtAge&quot;).show();\r\n    } else {\r\n        $(&quot;#txtAge&quot;).hide();\r\n    }\r\n\r\nHope it helps :)- Thanks."},{"score":24,"body_markdown":"I am using this:\r\n\r\n     &lt;input type=&quot;checkbox&quot; id=&quot;isAgeSelected&quot; value=&quot;1&quot; /&gt; &lt;br/&gt;\r\n     &lt;input type=&quot;textbox&quot; id=&quot;txtAge&quot; /&gt;\r\n\r\n     $(&quot;#isAgeSelected&quot;).is(&#39;:checked&#39;) ? $(&quot;#txtAge&quot;).show() : $(&quot;#txtAge&quot;).hide();\r\n"},{"score":68,"body_markdown":"Use:\r\n\r\n    &lt;input type=&quot;checkbox&quot; id=&quot;abc&quot; value=&quot;UDB&quot;&gt;UDB\r\n    &lt;input type=&quot;checkbox&quot; id=&quot;abc&quot; value=&quot;Prasad&quot;&gt;Prasad\r\n\r\n&lt;!-- --&gt;\r\n\r\n    $(&#39;input#abc&#39;).click(function(){\r\n      if($(this).is(&#39;:checked&#39;))\r\n      {\r\n        var checkedOne=$(this).val()\r\n        alert(checkedOne);\r\n\r\n        // Do some other action\r\n      }\r\n    })\r\n\r\nThis can help if you want that the required action has to be done only when you check the box not at the time you remove the check.\r\n"},{"score":15,"body_markdown":"The `checked` attribute of an `input type=&quot;checkbox&quot;` is mapped with the `defaultChecked` property, **not** with the `checked` property. \r\n\r\nSo when doing something in a page when a checkbox is checked on uncheked, use the `prop()` method instead. It fetches the property value and changes as the state of the checkbox changes. \r\n\r\nUsing `attr(`) or `getAttribute`(in pure JavaScript) in these cases are not the proper way of doing things. \r\n\r\nif `elem` is the concerned checkbox then do something like this to fetch the value:\r\n\r\n    elem.checked\r\n\r\nor\r\n\r\n    $(elem).prop(&#39;checked&#39;)\r\n"},{"score":31,"body_markdown":"**1) If your HTML markup is:**\r\n\r\n    &lt;input type=&quot;checkbox&quot;  /&gt;\r\n\r\nattr used:\r\n\r\n    $(element).attr(&quot;checked&quot;); // Will give you undefined as initial value of checkbox is not set\r\n\r\nIf prop is used:\r\n\r\n    $(element).prop(&quot;checked&quot;); // Will give you false whether or not initial value is set\r\n\r\n**2) If your HTML markup is:**\r\n\r\n     &lt;input type=&quot;checkbox&quot;  checked=&quot;checked&quot; /&gt;// May be like this also  checked=&quot;true&quot;\r\nattr used:\r\n\r\n    $(element).attr(&quot;checked&quot;) // Will return checked whether it is checked=&quot;true&quot;\r\n\r\nProp used:\r\n\r\n    $(element).prop(&quot;checked&quot;) // Will return true whether checked=&quot;checked&quot;\r\n"},{"score":20,"body_markdown":"I&#39;m sure it&#39;s not some revelation, but I didn&#39;t see it all in one example:\r\n\r\nSelector for all checked checkboxes(on the page):\r\n\r\n    $(&#39;input[type=checkbox]:checked&#39;)\r\n"},{"score":26,"body_markdown":"This example is for button.\r\n\r\nTry the following:\r\n    \r\n    &lt;input type=&quot;button&quot; class=&quot;check&quot; id=&quot;checkall&quot; value=&quot;Check All&quot; /&gt;  &amp;nbsp; &lt;input type=&quot;button&quot; id=&quot;remove&quot; value=&quot;Delete&quot; /&gt; &lt;br/&gt;\r\n    \r\n    &lt;input type=&quot;checkbox&quot; class=&quot;cb-element&quot;  value=&quot;1&quot; /&gt; Checkbox  1 &lt;br/&gt;\r\n    &lt;input type=&quot;checkbox&quot; class=&quot;cb-element&quot;  value=&quot;2&quot; /&gt; Checkbox  2 &lt;br/&gt;\r\n    &lt;input type=&quot;checkbox&quot; class=&quot;cb-element&quot;  value=&quot;3&quot; /&gt; Checkbox  3 &lt;br/&gt;\r\n    \r\n    \r\n    $(&#39;#remove&#39;).attr(&#39;disabled&#39;, &#39;disabled&#39;); \r\n    \r\n    $(document).ready(function() {  \r\n    \r\n        $(&#39;.cb-element&#39;).click(function() {\r\n    \r\n            if($(this).prop(&#39;checked&#39;))\r\n            {\r\n                $(&#39;#remove&#39;).attr(&#39;disabled&#39;, false);\r\n            }\r\n            else\r\n            {\r\n                $(&#39;#remove&#39;).attr(&#39;disabled&#39;, true);\r\n            }\r\n        });   \r\n    \r\n        $(&#39;.check:button&#39;).click(function()\r\n    {\r\n        var checked = !$(this).data(&#39;checked&#39;);\r\n        $(&#39;input:checkbox&#39;).prop(&#39;checked&#39;, checked);\r\n        $(this).data(&#39;checked&#39;, checked);\r\n    \r\n        if(checked == true)\r\n        {\r\n            $(this).val(&#39;Uncheck All&#39;);\r\n             $(&#39;#remove&#39;).attr(&#39;disabled&#39;, false);\r\n        }\r\n    \r\n        else if(checked == false)\r\n        {\r\n            $(this).val(&#39;Check All&#39;);\r\n            $(&#39;#remove&#39;).attr(&#39;disabled&#39;, true);\r\n        }\r\n    });\r\n    });\r\n\r\n"},{"score":9,"body_markdown":"Setter:\r\n\r\n    $(&quot;#chkmyElement&quot;)[0].checked = true;\r\n\r\nGetter:\r\n\r\n    if($(&quot;#chkmyElement&quot;)[0].checked) {\r\n       alert(&quot;enabled&quot;);\r\n    } else {\r\n       alert(&quot;disabled&quot;);\r\n    }\r\n"},{"score":15,"body_markdown":"###Automated\r\n\r\n    $(document).ready(function()\r\n    {\r\n        $(&#39;#isAgeSelected&#39;).change(function()\r\n        {\r\n            alert( &#39;value =&#39; + $(&#39;#chkSelect&#39;).attr(&#39;checked&#39;) );\r\n        });\r\n    });\r\n\r\n###HTML\r\n\r\n    &lt;b&gt; &lt;input type=&quot;isAgeSelected&quot; id=&quot;chkSelect&quot; /&gt; Age Check &lt;/b&gt;\r\n\r\n    &lt;br/&gt;&lt;br/&gt;\r\n\r\n    &lt;input type=&quot;button&quot; id=&quot;btnCheck&quot; value=&quot;check&quot; /&gt;\r\n\r\n###jQuery\r\n\r\n    $(document).ready(function()\r\n    {\r\n        $(&#39;#btnCheck&#39;).click(function()\r\n        {\r\n            var isChecked = $(&#39;#isAgeSelected&#39;).attr(&#39;checked&#39;);\r\n\r\n            if (isChecked == &#39;checked&#39;)\r\n                alert(&#39;check-box is checked&#39;);\r\n            else\r\n                alert(&#39;check-box is not checked&#39;);\r\n        })\r\n    });\r\n\r\n**Ajax**\r\n\r\n    function check()\r\n    {\r\n        if (isAgeSelected())\r\n            alert(&#39;check-box is checked&#39;);\r\n        else\r\n            alert(&#39;check-box is not checked&#39;);\r\n    }\r\n\r\n    function isAgeSelected()\r\n    {\r\n        return ($get(&quot;isAgeSelected&quot;).checked == true);\r\n    }\r\n"},{"score":244,"body_markdown":"**jQuery 1.6+**\r\n\r\n    $(&#39;#isAgeSelected&#39;).prop(&#39;checked&#39;)\r\n\r\n**jQuery 1.5 and below**\r\n\r\n    $(&#39;#isAgeSelected&#39;).attr(&#39;checked&#39;)\r\n\r\n**Any version of jQuery**\r\n\r\n    // Assuming an event handler on a checkbox\r\n    if (this.checked)\r\n\r\nAll credit goes to [Xian][1].\r\n\r\n  [1]: https://stackoverflow.com/a/426276/443427\r\n"},{"score":8,"body_markdown":"I would actually prefere the `change` event.\r\n\r\n    $(&#39;#isAgeSelected&#39;).change(function() {\r\n        $(&quot;#txtAge&quot;).toggle(this.checked);\r\n    });\r\n\r\n[Demo Fiddle][1]\r\n\r\n\r\n  [1]: http://jsfiddle.net/5udtC/6913/"},{"score":51,"body_markdown":"There are many ways to check if a checkbox is checked or not:\r\n\r\nWay to check using jQuery\r\n\r\n    if (elem.checked)\r\n    if ($(elem).prop(&quot;checked&quot;))\r\n    if ($(elem).is(&quot;:checked&quot;))\r\n    if ($(elem).attr(&#39;checked&#39;))\r\n\r\nCheck example or also document:\r\n\r\n * http://api.jquery.com/attr/\r\n\r\n * http://api.jquery.com/prop/\r\n"},{"score":1,"body_markdown":"In case if you need to use CSS class as jQuery selector you can do following:\r\n \r\n\r\n    $(document).ready(function () {\r\n            $(&#39;.myOptionCheckbox&#39;).change(function () {            \r\n                if ($(this).prop(&#39;checked&#39;) == true) {\r\n                    console.log(&quot;checked&quot;);           \r\n                }\r\n                else {\r\n                    console.log(&quot;unchecked&quot;);                \r\n                }\r\n            });\r\n        });\r\n\r\nIt works fine for `checkboxes` and `radioboxes` as well.\r\n"},{"score":32,"body_markdown":"    $(document).ready(function() {    \r\n        $(&#39;#agecheckbox&#39;).click(function() {\r\n            if($(this).is(&quot;:checked&quot;))\r\n            {\r\n                $(&#39;#agetextbox&#39;).show();\r\n            } else {\r\n                $(&#39;#agetextbox&#39;).hide();\r\n            }\r\n        });\r\n    });"},{"score":-1,"body_markdown":"`$(&quot;#isAgeSelected&quot;).prop(&#39;checked&#39;, true);`"},{"score":23,"body_markdown":"Toggle: 0/1 or else\r\n\r\n    &lt;input type=&quot;checkbox&quot; id=&quot;nolunch&quot; /&gt;\r\n    &lt;input id=&quot;checklunch /&gt;&quot;\r\n\r\n        $(&#39;#nolunch&#39;).change(function () {\r\n        if ($(this).is(&#39;:checked&#39;)) {\r\n            $(&#39;#checklunch&#39;).val(&#39;1&#39;);\r\n        };\r\n        if ($(this).is(&#39;:checked&#39;) == false) {\r\n            $(&#39;#checklunch&#39;).val(&#39;0&#39;);\r\n        };\r\n    });"},{"score":8,"body_markdown":"A selector returns multiple objects, and it must take the first item in the array:\r\n\r\n    // Collection\r\n    var chckremember = $(&quot;#chckremember&quot;);\r\n\r\n\r\n    // Result boolen\r\n    var ischecked=chckremember[0].checked;\r\n"},{"score":1,"body_markdown":"This function is alternative and stable:\r\n\r\n    $(&#39;#isAgeSelected&#39;).context.checked\r\n    (return True/False)\r\n\r\n\r\n***Example:*** \r\n\r\n    if($(&#39;#isAgeSelected&#39;).context.checked){ //if Checkbox is checked then bla bla..\r\n        /*.....*/\r\n    }else{\r\n        /*.....*/\r\n    }\r\n"},{"score":22,"body_markdown":"I think it will be the simple one \r\n\r\n    $(&#39;#isAgeSelected&#39;).change(function() {\r\n        if($(this).is(&quot;:checked&quot;)) {\r\n            $(&#39;#txtAge&#39;).show();\r\n        }\r\n    else{\r\n            $(&#39;#txtAge&#39;).hide();\r\n        }                                          \r\n    });"},{"score":1,"body_markdown":"    $(&#39;#chk&#39;).change(function() { \r\n        (this.checked)? alert(&#39;true&#39;) : alert(&#39;false&#39;);\r\n    });\r\n\r\n\r\n\r\n    ($(&#39;#chk&#39;)[0].checked)? alert(&#39;true&#39;) : alert(&#39;false&#39;);"},{"score":2,"body_markdown":"For older versions of jQuery, I had to use following,\r\n\r\n    $(&#39;#change_plan&#39;).live(&#39;click&#39;, function() {\r\n         var checked = $(&#39;#change_plan&#39;).attr(&#39;checked&#39;);\r\n         if(checked) {\r\n              //Code       \r\n         }\r\n         else {\r\n              //Code       \r\n         }\r\n    });"},{"score":25,"body_markdown":"Though you have proposed a JavaScript solution for your problem (displaying a `textbox` when a `checkbox` is `checked`), this problem could be solved **just by css**. With this approach, your form works for users who have disabled JavaScript.\r\n\r\nAssuming that you have the following HTML:\r\n\r\n    &lt;label for=&quot;show_textbox&quot;&gt;Show Textbox&lt;/label&gt;\r\n    &lt;input id=&quot;show_textbox&quot; type=&quot;checkbox&quot; /&gt;\r\n    &lt;input type=&quot;text&quot; /&gt;\r\n\r\nYou can use the following CSS to achieve the desired functionality:\r\n\r\n     #show_textbox:not(:checked) + input[type=text] {display:none;}\r\n\r\nFor other scenarios, you may think of appropriate CSS selectors.\r\n\r\n[Here is a Fiddle to demonstrate this approach][1].\r\n\r\n  [1]: https://jsfiddle.net/gLztyn9x/4/ &quot;fiddle&quot;\r\n"},{"score":47,"body_markdown":"This is some different method to do the same thing:\r\n\r\n&lt;!-- begin snippet: js hide: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    $(document).ready(function (){\r\n\r\n        $(&#39;#isAgeSelected&#39;).click(function() {\r\n            // $(&quot;#txtAge&quot;).toggle(this.checked);\r\n\r\n            // Using a pure CSS selector\r\n            if ($(this.checked)) {\r\n                alert(&#39;on check 1&#39;);\r\n            };\r\n\r\n            // Using jQuery&#39;s is() method\r\n            if ($(this).is(&#39;:checked&#39;)) {\r\n                alert(&#39;on checked 2&#39;);\r\n            };\r\n\r\n            //  // Using jQuery&#39;s filter() method\r\n            if ($(this).filter(&#39;:checked&#39;)) {\r\n                alert(&#39;on checked 3&#39;);\r\n            };\r\n        });\r\n    });\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;http://code.jquery.com/jquery-1.9.1.js&quot;&gt;&lt;/script&gt;\r\n    &lt;input type=&quot;checkbox&quot; id=&quot;isAgeSelected&quot;/&gt;\r\n    &lt;div id=&quot;txtAge&quot; style=&quot;display:none&quot;&gt;Age is something&lt;/div&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n"},{"score":8,"body_markdown":"Try this, \r\n\r\n    $(&#39;#isAgeSelected&#39;).click(function() {\r\n        if(this.checked){\r\n            $(&quot;#txtAge&quot;).show();\r\n        } else{\r\n            $(&quot;#txtAge&quot;).hide();\r\n        } \r\n    });"},{"score":32,"body_markdown":"You can use:\r\n\r\n      if(document.getElementById(&#39;isAgeSelected&#39;).checked)\r\n        $(&quot;#txtAge&quot;).show();  \r\n      else\r\n        $(&quot;#txtAge&quot;).hide();\r\n     \r\n \r\n\r\n\r\n----------\r\n\r\n\r\n    if($(&quot;#isAgeSelected&quot;).is(&#39;:checked&#39;))\r\n      $(&quot;#txtAge&quot;).show();  \r\n    else\r\n      $(&quot;#txtAge&quot;).hide();\r\n\r\n Both of them should work."},{"score":0,"body_markdown":"    if($(&#39;#isAgeSelected&#39;).prop(&#39;checked&#39;)) {\r\n        // do your action \r\n    }\r\n\r\n"},{"score":40,"body_markdown":"Use this:\r\n\r\n    if ($(&#39;input[name=&quot;salary_in.Basic&quot;]:checked&#39;).length &gt; 0)\r\n\r\nThe length is greater than zero if the checkbox is checked."},{"score":164,"body_markdown":"Use:\r\n\r\n    &lt;input type=&quot;checkbox&quot; name=&quot;planned_checked&quot; checked id=&quot;planned_checked&quot;&gt; Planned\r\n\r\n    $(&quot;#planned_checked&quot;).change(function() {\r\n        if($(this).prop(&#39;checked&#39;)) {\r\n            alert(&quot;Checked Box Selected&quot;);\r\n        } else {\r\n            alert(&quot;Checked Box deselect&quot;);\r\n        }\r\n    });\r\n\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n        $(&quot;#planned_checked&quot;).change(function() {\r\n            if($(this).prop(&#39;checked&#39;)) {\r\n                alert(&quot;Checked Box Selected&quot;);\r\n            } else {\r\n                alert(&quot;Checked Box deselect&quot;);\r\n            }\r\n        });\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n    &lt;input type=&quot;checkbox&quot; name=&quot;planned_checked&quot; checked id=&quot;planned_checked&quot;&gt; Planned\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"},{"score":4,"body_markdown":"What about this solution?\r\n\r\n\r\n    $(&quot;#txtAge&quot;)[\r\n        $(&quot;#isAgeSelected&quot;).is(&#39;:checked&#39;) ?\r\n        &#39;show&#39; :\r\n        &#39;hide&#39;\r\n    ]();"},{"score":54,"body_markdown":"**This code will help you**\r\n\r\n    $(&#39;#isAgeSelected&#39;).click(function(){\r\n       console.log(this.checked);\r\n       if(this.checked == true) {\r\n            $(&quot;#txtAge&quot;).show();\r\n        } else {\r\n           $(&quot;#txtAge&quot;).hide();\r\n       }\r\n    });"},{"score":8,"body_markdown":"I&#39;m using jQuery 1.11.1 and I had troubles with setting and reading checkbox value as well.\r\n\r\nI finally solved it by these two functions:\r\n\r\n    function setCheckboxValue(checkBoxId, checked) {\r\n        if (checkBoxId &amp;&amp; (checked === true || checked === false)) {\r\n            var elem = $(&#39;#&#39; + checkBoxId);\r\n            if (checked === true) {\r\n                elem.attr(&#39;checked&#39;, &#39;checked&#39;);\r\n            } else {\r\n                elem.removeAttr(&#39;checked&#39;);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isChecked(checkBoxId) {\r\n        return $(&#39;#&#39; + checkBoxId).attr(&#39;checked&#39;) != null;\r\n    }\r\n\r\nIt might looks a little bit dirty but it solves all the wired issue I had among different types of browsers."},{"score":13,"body_markdown":"Simply use it like below\r\n\r\n     $(&#39;#isAgeSelected&#39;).change(function() {\r\n         if ($(this).is(&quot;:checked&quot;)) { // or if($(&quot;#isAgeSelected&quot;).attr(&#39;checked&#39;) == true){\r\n             $(&#39;#txtAge&#39;).show();\r\n         } else {\r\n             $(&#39;#txtAge&#39;).hide();\r\n         }\r\n     });"},{"score":4,"body_markdown":"In case you need to know if a checkbox is checked in pure `javascript` you should use this code .  \r\n\r\n    let checkbox =document.getElementById(&#39;myCheckboxId&#39;);\r\n    if(checkbox.checked) {\r\n        alert(&quot;element is checked&quot;);\r\n    } else {\r\n        alert(&quot;element is  ot checked&quot;);\r\n    }"},{"score":4,"body_markdown":"I need to check the checked property of a checkbox and perform an action based on the checked property using jQuery. \r\n\r\nE.X - \r\n\r\n1) Run On load to get checkbox value if the age checkbox is checked, then I need to show a text box to enter age, else hide the text box. \r\n\r\n2) if the age checkbox is checked, then I need to show a text box to enter age, else hide the text box using click event of checkbox. \r\n\r\n**so code not returns false by default:** \r\n\r\nTry the following:\r\n\r\n    &lt;html&gt;\r\n            &lt;head&gt;\r\n                &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n            &lt;/head&gt;\r\n            &lt;body&gt;\r\n                &lt;h1&gt;Jquery Demo&lt;/h1&gt;\r\n                &lt;input type=&quot;checkbox&quot; name=&quot;isAge&quot; checked id=&quot;isAge&quot;&gt; isAge &lt;br/&gt;\r\n                &lt;div id=&quot;Age&quot; style=&quot;display:none&quot;&gt;\r\n                  &lt;label&gt;Enter your age&lt;/label&gt;\r\n                  &lt;input type=&quot;number&quot; name=&quot;age&quot;&gt;\r\n                &lt;/div&gt;\r\n                &lt;script type=&quot;text/javascript&quot;&gt;\r\n                if(document.getElementById(&#39;isAge&#39;).checked) {\r\n                    $(&#39;#Age&#39;).show();\r\n                } else {\r\n                    $(&#39;#Age&#39;).hide();\r\n                }   \r\n                $(&#39;#isAge&#39;).click(function() {\r\n                    if(document.getElementById(&#39;isAge&#39;).checked) {\r\n                        $(&#39;#Age&#39;).show();\r\n                    } else {\r\n                        $(&#39;#Age&#39;).hide();\r\n                    }\r\n                }); \r\n                &lt;/script&gt;\r\n            &lt;/body&gt;\r\n        &lt;/html&gt;\r\n Here is a modified version : https://jsfiddle.net/sedhal/0hygLtrz/7/"},{"score":13,"body_markdown":"Using pure **JavaScript**:\r\n\r\n    let checkbox = document.getElementById(&#39;checkboxID&#39;);\r\n\r\n    if(checkbox.checked) {\r\n      alert(&#39;is checked&#39;);\r\n    } else {\r\n      alert(&#39;not checked yet&#39;);\r\n    }"},{"score":7,"body_markdown":"You Can Try This code: \r\n\r\n    $(&#39;#isAgeSelected&#39;).click(function(){\r\n       console.log(this.checked);\r\n       if(this.checked == true) {\r\n            $(&quot;#txtAge&quot;).show();\r\n        } else {\r\n           $(&quot;#txtAge&quot;).hide();\r\n       }\r\n    });"},{"score":20,"body_markdown":"**Please try below code to check checkbox is checked or not** \r\n\r\n    $(document).ready(function(){\r\n    \r\n        $(&quot;#isAgeSelected&quot;).on(&#39;change&#39;,function(){\r\n    \r\n        if($(&quot;#isAgeSelected&quot;).is(&#39;:checked&#39;))\r\n            $(&quot;#txtAge&quot;).show();  // checked\r\n        else{\r\n            $(&quot;#txtAge&quot;).hide();  // unchecked\r\n        }\r\n\r\n       });\r\n\r\n    });\r\n"},{"score":3,"body_markdown":"In pure js checkbox state is easier to read\r\n\r\n    isAgeSelected.checked\r\n\r\n&lt;!-- begin snippet: js hide: true console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    function check() {\r\n      txtAge.style.display= isAgeSelected.checked ? &#39;block&#39;:&#39;none&#39;;\r\n    }\r\n\r\n\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n\r\n    Age &lt;input type=&quot;checkbox&quot; id=&quot;isAgeSelected&quot;/&gt;\r\n\r\n    &lt;button onclick=&quot;check()&quot;&gt;Check&lt;/button&gt;\r\n\r\n    &lt;div id=&quot;txtAge&quot; style=&quot;display:none&quot;&gt;\r\n    Age is selected\r\n    &lt;/div&gt;\r\n\r\n\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"},{"score":29,"body_markdown":"You can try the `change` event of checkbox to track the `:checked` state change.\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    $(&quot;#isAgeSelected&quot;).on(&#39;change&#39;, function() {\r\n      if ($(&quot;#isAgeSelected&quot;).is(&#39;:checked&#39;))\r\n        alert(&quot;checked&quot;);\r\n      else {\r\n        alert(&quot;unchecked&quot;);\r\n      }\r\n    });\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n    &lt;input type=&quot;checkbox&quot; id=&quot;isAgeSelected&quot; /&gt;\r\n    &lt;div id=&quot;txtAge&quot; style=&quot;display:none&quot;&gt;\r\n      Age is selected\r\n    &lt;/div&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"},{"score":19,"body_markdown":"To act on a checkbox being checked or unchecked on click.\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    $(&#39;#customCheck1&#39;).click(function() {\r\n      if (this.checked) {\r\n        console.log(&#39;checked&#39;);\r\n      } else {\r\n        console.log(&#39;un-checked&#39;);\r\n      }\r\n    });\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n\r\n    &lt;input type=&quot;checkbox&quot; id=&quot;customCheck1&quot;&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nEDIT: Not a nice programming expression `if (boolean == true)` though `.checked` property might return other type variables as well..\r\n\r\nIt is better to use `.prop(&quot;checked&quot;)` instead. It returns `true` and `false` only."},{"score":5,"body_markdown":"Hi you can use plain ```Javascript```, like so:\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    document.getElementById(&#39;checkboxOption&#39;).addEventListener(&#39;click&#39;,      \r\n       event =&gt; console.log(event.target.checked)\r\n    );\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;checkboxOption&quot;&gt;Check Option&lt;/label&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"},{"score":10,"body_markdown":"\r\n\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    $(document).on(&quot;click&quot;,&quot;#isAgeSelected&quot;,function(){\r\n      if($(this).prop(&quot;checked&quot;) == true){\r\n        $(&quot;#txtAge&quot;).show();\r\n      }\r\n      else if($(this).prop(&quot;checked&quot;) == false){\r\n        $(&quot;#txtAge&quot;).hide();\r\n      }\r\n    });\r\n\r\n&lt;!-- language: lang-html --&gt;\r\n\r\n    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n\r\n     &lt;input type=&quot;checkbox&quot; id=&quot;isAgeSelected&quot;/&gt;\r\n\r\n    &lt;div id=&quot;txtAge&quot; style=&quot;display:none&quot;&gt;\r\n    &lt;input type=&quot;text&quot; name=&quot;age&quot; placeholder=&quot;Please enter age&quot; /&gt;\r\n    &lt;/div&gt;\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n"}],"score":4709}